[
    {
        "label": "django.db.models.deletion",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.db.models.deletion",
        "description": "django.db.models.deletion",
        "detail": "django.db.models.deletion",
        "documentation": {}
    },
    {
        "label": "ProtectedError",
        "importPath": "django.db.models.deletion",
        "description": "django.db.models.deletion",
        "isExtraImport": true,
        "detail": "django.db.models.deletion",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "transaction",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "forms",
        "importPath": "django",
        "description": "django",
        "isExtraImport": true,
        "detail": "django",
        "documentation": {}
    },
    {
        "label": "forms",
        "importPath": "django",
        "description": "django",
        "isExtraImport": true,
        "detail": "django",
        "documentation": {}
    },
    {
        "label": "forms",
        "importPath": "django",
        "description": "django",
        "isExtraImport": true,
        "detail": "django",
        "documentation": {}
    },
    {
        "label": "forms",
        "importPath": "django",
        "description": "django",
        "isExtraImport": true,
        "detail": "django",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "reverse_lazy",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "reverse_lazy",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "reverse_lazy",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "reverse_lazy",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "ListView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "CreateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "DetailView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "UpdateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "DeleteView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "ListView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "CreateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "DetailView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "UpdateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "DeleteView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "ListView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "CreateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "DetailView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "UpdateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "DeleteView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "ListView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "CreateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "DetailView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "UpdateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "DeleteView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "Entrada",
        "importPath": "movimentacoes.models",
        "description": "movimentacoes.models",
        "isExtraImport": true,
        "detail": "movimentacoes.models",
        "documentation": {}
    },
    {
        "label": "Saida",
        "importPath": "movimentacoes.models",
        "description": "movimentacoes.models",
        "isExtraImport": true,
        "detail": "movimentacoes.models",
        "documentation": {}
    },
    {
        "label": "Cliente",
        "importPath": "clientes.models",
        "description": "clientes.models",
        "isExtraImport": true,
        "detail": "clientes.models",
        "documentation": {}
    },
    {
        "label": "Cliente",
        "importPath": "clientes.models",
        "description": "clientes.models",
        "isExtraImport": true,
        "detail": "clientes.models",
        "documentation": {}
    },
    {
        "label": "Cliente",
        "importPath": "clientes.models",
        "description": "clientes.models",
        "isExtraImport": true,
        "detail": "clientes.models",
        "documentation": {}
    },
    {
        "label": "CPF",
        "importPath": "validate_docbr",
        "description": "validate_docbr",
        "isExtraImport": true,
        "detail": "validate_docbr",
        "documentation": {}
    },
    {
        "label": "CNPJ",
        "importPath": "validate_docbr",
        "description": "validate_docbr",
        "isExtraImport": true,
        "detail": "validate_docbr",
        "documentation": {}
    },
    {
        "label": "ClientesListView",
        "importPath": "clientes.views",
        "description": "clientes.views",
        "isExtraImport": true,
        "detail": "clientes.views",
        "documentation": {}
    },
    {
        "label": "ClienteCreateView",
        "importPath": "clientes.views",
        "description": "clientes.views",
        "isExtraImport": true,
        "detail": "clientes.views",
        "documentation": {}
    },
    {
        "label": "ClientesUpdateView",
        "importPath": "clientes.views",
        "description": "clientes.views",
        "isExtraImport": true,
        "detail": "clientes.views",
        "documentation": {}
    },
    {
        "label": "ClientesDeleteView",
        "importPath": "clientes.views",
        "description": "clientes.views",
        "isExtraImport": true,
        "detail": "clientes.views",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "get_asgi_application",
        "importPath": "django.core.asgi",
        "description": "django.core.asgi",
        "isExtraImport": true,
        "detail": "django.core.asgi",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "load_dotenv",
        "importPath": "dotenv",
        "description": "dotenv",
        "isExtraImport": true,
        "detail": "dotenv",
        "documentation": {}
    },
    {
        "label": "constants",
        "importPath": "django.contrib.messages",
        "description": "django.contrib.messages",
        "isExtraImport": true,
        "detail": "django.contrib.messages",
        "documentation": {}
    },
    {
        "label": "constants",
        "importPath": "django.contrib.messages",
        "description": "django.contrib.messages",
        "isExtraImport": true,
        "detail": "django.contrib.messages",
        "documentation": {}
    },
    {
        "label": "get_wsgi_application",
        "importPath": "django.core.wsgi",
        "description": "django.core.wsgi",
        "isExtraImport": true,
        "detail": "django.core.wsgi",
        "documentation": {}
    },
    {
        "label": "now",
        "importPath": "django.utils.timezone",
        "description": "django.utils.timezone",
        "isExtraImport": true,
        "detail": "django.utils.timezone",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "django.utils.timezone",
        "description": "django.utils.timezone",
        "isExtraImport": true,
        "detail": "django.utils.timezone",
        "documentation": {}
    },
    {
        "label": "ContaBancaria",
        "importPath": "bancos.models",
        "description": "bancos.models",
        "isExtraImport": true,
        "detail": "bancos.models",
        "documentation": {}
    },
    {
        "label": "ContaBancaria",
        "importPath": "bancos.models",
        "description": "bancos.models",
        "isExtraImport": true,
        "detail": "bancos.models",
        "documentation": {}
    },
    {
        "label": "ContaBancaria",
        "importPath": "bancos.models",
        "description": "bancos.models",
        "isExtraImport": true,
        "detail": "bancos.models",
        "documentation": {}
    },
    {
        "label": "TipoDespesa",
        "importPath": "operacoes.models",
        "description": "operacoes.models",
        "isExtraImport": true,
        "detail": "operacoes.models",
        "documentation": {}
    },
    {
        "label": "TipoPagamento",
        "importPath": "operacoes.models",
        "description": "operacoes.models",
        "isExtraImport": true,
        "detail": "operacoes.models",
        "documentation": {}
    },
    {
        "label": "TipoReceita",
        "importPath": "operacoes.models",
        "description": "operacoes.models",
        "isExtraImport": true,
        "detail": "operacoes.models",
        "documentation": {}
    },
    {
        "label": "TipoReceita",
        "importPath": "operacoes.models",
        "description": "operacoes.models",
        "isExtraImport": true,
        "detail": "operacoes.models",
        "documentation": {}
    },
    {
        "label": "TipoDespesa",
        "importPath": "operacoes.models",
        "description": "operacoes.models",
        "isExtraImport": true,
        "detail": "operacoes.models",
        "documentation": {}
    },
    {
        "label": "TipoPagamento",
        "importPath": "operacoes.models",
        "description": "operacoes.models",
        "isExtraImport": true,
        "detail": "operacoes.models",
        "documentation": {}
    },
    {
        "label": "HttpRequest",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "HttpResponse",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "timezone",
        "importPath": "django.utils",
        "description": "django.utils",
        "isExtraImport": true,
        "detail": "django.utils",
        "documentation": {}
    },
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "bancos.migrations.0001_initial",
        "description": "bancos.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Banco',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('nome', models.CharField(max_length=50)),",
        "detail": "bancos.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "bancos.migrations.0002_remove_banco_xpto",
        "description": "bancos.migrations.0002_remove_banco_xpto",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('bancos', '0001_initial'),\n    ]\n    operations = [\n        migrations.RemoveField(\n            model_name='banco',\n            name='xpto',\n        ),\n    ]",
        "detail": "bancos.migrations.0002_remove_banco_xpto",
        "documentation": {}
    },
    {
        "label": "BancoAdmin",
        "kind": 6,
        "importPath": "bancos.admin",
        "description": "bancos.admin",
        "peekOfCode": "class BancoAdmin(admin.ModelAdmin):\n    list_display = ('nome', 'status')\n    search_fields = ('nome',)\n    list_filter = ('status',)\n@admin.register(ContaBancaria)\nclass ContaBancariaAdmin(admin.ModelAdmin):\n    list_display = ('nome', 'saldo_atual', 'status')\n    search_fields = ('nome',)\n    list_filter = ('status',)\n# Register your models here.",
        "detail": "bancos.admin",
        "documentation": {}
    },
    {
        "label": "ContaBancariaAdmin",
        "kind": 6,
        "importPath": "bancos.admin",
        "description": "bancos.admin",
        "peekOfCode": "class ContaBancariaAdmin(admin.ModelAdmin):\n    list_display = ('nome', 'saldo_atual', 'status')\n    search_fields = ('nome',)\n    list_filter = ('status',)\n# Register your models here.",
        "detail": "bancos.admin",
        "documentation": {}
    },
    {
        "label": "BancosConfig",
        "kind": 6,
        "importPath": "bancos.apps",
        "description": "bancos.apps",
        "peekOfCode": "class BancosConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'bancos'",
        "detail": "bancos.apps",
        "documentation": {}
    },
    {
        "label": "BancoModelForm",
        "kind": 6,
        "importPath": "bancos.forms",
        "description": "bancos.forms",
        "peekOfCode": "class BancoModelForm(forms.ModelForm):\n    class Meta:\n        model = Banco\n        fields = (\"nome\", \"status\")\nclass ContaBancariaModelForm(forms.ModelForm):\n    class Meta:\n        model = ContaBancaria\n        fields = '__all__'\n        widgets = {\n            'saldo_atual': forms.NumberInput(attrs={\"readonly\":True}),",
        "detail": "bancos.forms",
        "documentation": {}
    },
    {
        "label": "ContaBancariaModelForm",
        "kind": 6,
        "importPath": "bancos.forms",
        "description": "bancos.forms",
        "peekOfCode": "class ContaBancariaModelForm(forms.ModelForm):\n    class Meta:\n        model = ContaBancaria\n        fields = '__all__'\n        widgets = {\n            'saldo_atual': forms.NumberInput(attrs={\"readonly\":True}),\n            'saldo_inicial': forms.NumberInput(attrs={'placeholder':'0,00'}),\n        }\n    def __init__(self, *args, **kwargs):\n        super().__init__(*args, **kwargs)",
        "detail": "bancos.forms",
        "documentation": {}
    },
    {
        "label": "ContaBancariaUpdateModelForm",
        "kind": 6,
        "importPath": "bancos.forms",
        "description": "bancos.forms",
        "peekOfCode": "class ContaBancariaUpdateModelForm(forms.ModelForm):\n    class Meta:\n        model = ContaBancaria\n        fields = '__all__'\n        widgets = {\n            'saldo_atual': forms.NumberInput(attrs={\"readonly\":True}),\n            'saldo_inicial': forms.NumberInput(attrs={\"readonly\":True}),\n        }\nclass FiltroMovimentacaoForm(forms.Form):\n    class Meta:",
        "detail": "bancos.forms",
        "documentation": {}
    },
    {
        "label": "FiltroMovimentacaoForm",
        "kind": 6,
        "importPath": "bancos.forms",
        "description": "bancos.forms",
        "peekOfCode": "class FiltroMovimentacaoForm(forms.Form):\n    class Meta:\n        fields = ['situacao', 'data_inicio', 'data_fim'] \n        situacao_choices = [\n        ('', 'Todas'),\n        ('PG', 'Pago'),\n        ('AP', 'A pagar'),\n        ]\n        situacao = forms.ChoiceField(choices=situacao_choices, required=False)\n        data_inicio = forms.DateField(required=False, widget=forms.TextInput(attrs={'type': 'date'}))",
        "detail": "bancos.forms",
        "documentation": {}
    },
    {
        "label": "Banco",
        "kind": 6,
        "importPath": "bancos.models",
        "description": "bancos.models",
        "peekOfCode": "class Banco(models.Model):\n    nome = models.CharField(max_length=50)\n    status = models.CharField(max_length=10, choices=STATUS, default=\"AT\")\n    @property\n    def status_formatado(self):\n        for id, descricao in STATUS:\n            if self.status == id:\n                return descricao\n            return self.status\n    def __str__(self):",
        "detail": "bancos.models",
        "documentation": {}
    },
    {
        "label": "ContaBancaria",
        "kind": 6,
        "importPath": "bancos.models",
        "description": "bancos.models",
        "peekOfCode": "class ContaBancaria(models.Model):\n    banco = models.ForeignKey(Banco, on_delete=models.PROTECT)\n    nome = models.CharField(max_length=50)\n    conta = models.CharField(max_length=20)\n    agencia = models.CharField(max_length=20)\n    gerente = models.CharField(max_length=200, null=True, blank=True)\n    saldo_inicial = models.DecimalField(max_digits=12, decimal_places=2)\n    saldo_atual = models.DecimalField(max_digits=12,decimal_places=2, null=True, blank=True,auto_created=True, default=0)\n    status = models.CharField(max_length=10, choices=STATUS, default=\"AT\")\n    @property",
        "detail": "bancos.models",
        "documentation": {}
    },
    {
        "label": "STATUS",
        "kind": 5,
        "importPath": "bancos.models",
        "description": "bancos.models",
        "peekOfCode": "STATUS = (\n    (\"AT\", \"Ativo\"),\n    (\"IN\", \"Inativo\")\n)\nclass Banco(models.Model):\n    nome = models.CharField(max_length=50)\n    status = models.CharField(max_length=10, choices=STATUS, default=\"AT\")\n    @property\n    def status_formatado(self):\n        for id, descricao in STATUS:",
        "detail": "bancos.models",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "bancos.urls",
        "description": "bancos.urls",
        "peekOfCode": "urlpatterns = [\n    path('bancos/', BancoListView.as_view(), name='banco-list'),\n    path('bancos/<int:pk>/', BancoDetailView.as_view(), name='banco-detail'),\n    path('bancos/novo/', BancoCreateView.as_view(), name='banco-create'),\n    path('bancos/editar/<int:pk>/', BancoUpdateView.as_view(), name='banco-update'),\n    path('bancos/<int:pk>/deletar/', BancoDeleteView.as_view(), name='banco-delete'),\n    path('contas/', ContaBancariaListView.as_view(), name='conta_bancaria_list'),\n    path('contas/criar/', ContaBancariaCreateView.as_view(), name='conta_bancaria_create'),\n    path('contas/<int:pk>/', ContaBancariaDetailView.as_view(), name='conta_bancaria_detail'),\n    path('contas/<int:pk>/editar/', ContaBancariaUpdateView.as_view(), name='conta_bancaria_update'),",
        "detail": "bancos.urls",
        "documentation": {}
    },
    {
        "label": "BancoCreateView",
        "kind": 6,
        "importPath": "bancos.views",
        "description": "bancos.views",
        "peekOfCode": "class BancoCreateView(CreateView):\n    '''CRIAÇÃO DE UM NOVO BANCO'''\n    model = Banco\n    form_class = BancoModelForm\n    template_name = 'banco_form.html'\n    success_url = reverse_lazy('banco-list')\nclass BancoListView(ListView):\n    '''LISTAGEM DOS BANCOS'''\n    model = Banco\n    template_name = 'banco_list.html'",
        "detail": "bancos.views",
        "documentation": {}
    },
    {
        "label": "BancoListView",
        "kind": 6,
        "importPath": "bancos.views",
        "description": "bancos.views",
        "peekOfCode": "class BancoListView(ListView):\n    '''LISTAGEM DOS BANCOS'''\n    model = Banco\n    template_name = 'banco_list.html'\n    context_object_name = 'bancos'\nclass BancoDetailView(DetailView):\n    '''DETALHAMENTO DE UM BANCO'''\n    model = Banco\n    template_name = 'banco_detail.html'\n    context_object_name = 'banco'",
        "detail": "bancos.views",
        "documentation": {}
    },
    {
        "label": "BancoDetailView",
        "kind": 6,
        "importPath": "bancos.views",
        "description": "bancos.views",
        "peekOfCode": "class BancoDetailView(DetailView):\n    '''DETALHAMENTO DE UM BANCO'''\n    model = Banco\n    template_name = 'banco_detail.html'\n    context_object_name = 'banco'\nclass BancoUpdateView(UpdateView):\n    '''ATUALIZAÇÃO DE UM BANCO'''\n    model = Banco\n    template_name = 'banco_form.html'\n    form_class = BancoModelForm",
        "detail": "bancos.views",
        "documentation": {}
    },
    {
        "label": "BancoUpdateView",
        "kind": 6,
        "importPath": "bancos.views",
        "description": "bancos.views",
        "peekOfCode": "class BancoUpdateView(UpdateView):\n    '''ATUALIZAÇÃO DE UM BANCO'''\n    model = Banco\n    template_name = 'banco_form.html'\n    form_class = BancoModelForm\n    success_url = reverse_lazy('banco-list')\nclass BancoDeleteView(DeleteView):\n    '''EXCLUSÃO DE UM BANCO'''\n    model = Banco\n    template_name = 'banco_confirm_delete.html'",
        "detail": "bancos.views",
        "documentation": {}
    },
    {
        "label": "BancoDeleteView",
        "kind": 6,
        "importPath": "bancos.views",
        "description": "bancos.views",
        "peekOfCode": "class BancoDeleteView(DeleteView):\n    '''EXCLUSÃO DE UM BANCO'''\n    model = Banco\n    template_name = 'banco_confirm_delete.html'\n    success_url = reverse_lazy('banco-list')\n    def delete(self, request, *args, **kwargs):\n        try:\n            return super().delete(request, *args, **kwargs)\n        except ProtectedError:\n            messages.error(request, \"Não é possível excluir este banco porque ele está relacionado a contas ativas.\")",
        "detail": "bancos.views",
        "documentation": {}
    },
    {
        "label": "ContaBancariaUpdateView",
        "kind": 6,
        "importPath": "bancos.views",
        "description": "bancos.views",
        "peekOfCode": "class ContaBancariaUpdateView(UpdateView):\n    model = ContaBancaria\n    def form_valid(self, form):\n        try:\n            return super().form_valid(form)\n        except ValueError as e:\n            form.add_error('saldo_inicial', str(e))  # Adiciona erro ao campo de saldo inicial\n            return self.form_invalid(form)\n    def get_context_data(self, **kwargs):\n        context = super().get_context_data(**kwargs)",
        "detail": "bancos.views",
        "documentation": {}
    },
    {
        "label": "ContaBancariaListView",
        "kind": 6,
        "importPath": "bancos.views",
        "description": "bancos.views",
        "peekOfCode": "class ContaBancariaListView(ListView):\n    '''LISTAGEM DE CONTAS BANCÁRIAS'''\n    model = ContaBancaria\n    template_name = 'conta_bancaria_list.html'\n    context_object_name = 'contas'\nclass ContaBancariaCreateView(CreateView):\n    '''CRIAÇÃO DE UMA CONTA BANCÁRIA'''\n    model = ContaBancaria\n    form_class = ContaBancariaModelForm\n    template_name = 'conta_bancaria_form.html'",
        "detail": "bancos.views",
        "documentation": {}
    },
    {
        "label": "ContaBancariaCreateView",
        "kind": 6,
        "importPath": "bancos.views",
        "description": "bancos.views",
        "peekOfCode": "class ContaBancariaCreateView(CreateView):\n    '''CRIAÇÃO DE UMA CONTA BANCÁRIA'''\n    model = ContaBancaria\n    form_class = ContaBancariaModelForm\n    template_name = 'conta_bancaria_form.html'\n    success_url = reverse_lazy('conta_bancaria_list')\n    def get_initial(self):\n        initial = super().get_initial()\n        initial['status'] = 'AT'  # Define o status como ativo por padrão\n        return initial",
        "detail": "bancos.views",
        "documentation": {}
    },
    {
        "label": "ContaBancariaDetailView",
        "kind": 6,
        "importPath": "bancos.views",
        "description": "bancos.views",
        "peekOfCode": "class ContaBancariaDetailView(DetailView):\n    '''DETALHAMENTO DE UMA CONTA BANCÁRIA'''\n    model = ContaBancaria\n    template_name = 'conta_bancaria_detail.html'\n    context_object_name = 'conta'\n    def get_context_data(self, **kwargs):\n        context = super().get_context_data(**kwargs)\n        # Pegar as movimentações (entradas e saídas) da conta bancária atual\n        conta = self.get_object()\n        movimentacoes = list(Entrada.objects.filter(conta=conta).order_by('-data')) + list(Saida.objects.filter(conta=conta).order_by('-data'))",
        "detail": "bancos.views",
        "documentation": {}
    },
    {
        "label": "ContaBancariaUpdateView",
        "kind": 6,
        "importPath": "bancos.views",
        "description": "bancos.views",
        "peekOfCode": "class ContaBancariaUpdateView(UpdateView):\n    '''ATUALIZAÇÃO DE UMA CONTA BANCÁRIA'''\n    model = ContaBancaria\n    form_class = ContaBancariaUpdateModelForm\n    template_name = 'conta_bancaria_form.html'\n    success_url = reverse_lazy('conta_bancaria_list')\n    def form_valid(self, form):\n        cb = self.get_object()\n        saldo_inicial_antigo = cb.saldo_inicial\n        saldo_atual_antigo = cb.saldo_atual",
        "detail": "bancos.views",
        "documentation": {}
    },
    {
        "label": "ContaBancariaDeleteView",
        "kind": 6,
        "importPath": "bancos.views",
        "description": "bancos.views",
        "peekOfCode": "class ContaBancariaDeleteView(DeleteView):\n    '''EXCLUSÃO DE UMA CONTA BANCÁRIA'''\n    model = ContaBancaria\n    template_name = 'conta_bancaria_confirm_delete.html'\n    success_url = reverse_lazy('conta_bancaria_list')",
        "detail": "bancos.views",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "clientes.migrations.0001_initial",
        "description": "clientes.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Cliente',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('xpto', models.CharField(max_length=1)),",
        "detail": "clientes.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "clientes.migrations.0002_remove_cliente_xpto",
        "description": "clientes.migrations.0002_remove_cliente_xpto",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('clientes', '0001_initial'),\n    ]\n    operations = [\n        migrations.RemoveField(\n            model_name='cliente',\n            name='xpto',\n        ),\n    ]",
        "detail": "clientes.migrations.0002_remove_cliente_xpto",
        "documentation": {}
    },
    {
        "label": "ClientesAdmin",
        "kind": 6,
        "importPath": "clientes.admin",
        "description": "clientes.admin",
        "peekOfCode": "class ClientesAdmin(admin.ModelAdmin):\n    list_display=(\"nome_fantasia\", \"razao_social\", \"cnpj_cpf\", \"cep\", 'endereco')\n    search_fields = (\"nome_fantasia\", \"cnpj_cpf\")\nadmin.site.register(Cliente, ClientesAdmin)",
        "detail": "clientes.admin",
        "documentation": {}
    },
    {
        "label": "ClientesConfig",
        "kind": 6,
        "importPath": "clientes.apps",
        "description": "clientes.apps",
        "peekOfCode": "class ClientesConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'clientes'",
        "detail": "clientes.apps",
        "documentation": {}
    },
    {
        "label": "ClienteModelForm",
        "kind": 6,
        "importPath": "clientes.forms",
        "description": "clientes.forms",
        "peekOfCode": "class ClienteModelForm(forms.ModelForm):\n    class Meta:\n        model=Cliente\n        fields = '__all__'\n    def clean_cnpj_cpf(self):\n        cnpj_cpf = self.cleaned_data.get('cnpj_cpf')\n        tipo_pessoa = self.cleaned_data.get('tipo_pessoa')\n        if tipo_pessoa == 'pf':  # Valida como CPF\n            cpf_validator = CPF()\n            if not cpf_validator.validate(cnpj_cpf):",
        "detail": "clientes.forms",
        "documentation": {}
    },
    {
        "label": "Cliente",
        "kind": 6,
        "importPath": "clientes.models",
        "description": "clientes.models",
        "peekOfCode": "class Cliente(models.Model):\n    PESSOA =(\n        ('pf', \"Pessoa física\"),\n        ('pj', \"Pessoa jurídica\"),\n    )\n    nome_fantasia = models.CharField(max_length=80)\n    razao_social = models.CharField(max_length=80)\n    tipo_pessoa = models.CharField(max_length=20,choices=PESSOA, null=True, blank=True)\n    cnpj_cpf = models.CharField(max_length=18)\n    cep = models.CharField(max_length=9)",
        "detail": "clientes.models",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "clientes.urls",
        "description": "clientes.urls",
        "peekOfCode": "urlpatterns = [\n    path(\"\", ClientesListView.as_view(), name=\"clientes-list\"),\n    path(\"novo\", ClienteCreateView.as_view(), name=\"clientes-create\"),\n    path(\"<int:pk>\", ClientesUpdateView.as_view(), name=\"clientes-update\"),\n    path(\"delete/<int:pk>\", ClientesDeleteView.as_view(), name=\"clientes-delete\"),\n]",
        "detail": "clientes.urls",
        "documentation": {}
    },
    {
        "label": "ClientesListView",
        "kind": 6,
        "importPath": "clientes.views",
        "description": "clientes.views",
        "peekOfCode": "class ClientesListView(ListView):\n    model = Cliente\n    template_name = \"clientes.html\"\n    context_object_name = 'clientes'\n    def get_queryset(self):\n        clientes = super().get_queryset().order_by('nome_fantasia')\n        search = self.request.GET.get('search')\n        if search:\n            clientes = clientes.filter(model__icontains=search)\n        return clientes",
        "detail": "clientes.views",
        "documentation": {}
    },
    {
        "label": "ClienteCreateView",
        "kind": 6,
        "importPath": "clientes.views",
        "description": "clientes.views",
        "peekOfCode": "class ClienteCreateView(CreateView):\n    model = Cliente\n    template_name = \"clientes_create.html\"\n    form_class = ClienteModelForm\n    success_url = \"/clientes/\"\nclass ClientesUpdateView(UpdateView):\n    model = Cliente\n    template_name = \"clientes_update.html\"\n    form_class = ClienteModelForm\n    def get_success_url(self):",
        "detail": "clientes.views",
        "documentation": {}
    },
    {
        "label": "ClientesUpdateView",
        "kind": 6,
        "importPath": "clientes.views",
        "description": "clientes.views",
        "peekOfCode": "class ClientesUpdateView(UpdateView):\n    model = Cliente\n    template_name = \"clientes_update.html\"\n    form_class = ClienteModelForm\n    def get_success_url(self):\n        return reverse_lazy('clientes-update', kwargs={'pk': self.object.pk})\nclass ClientesDeleteView(DeleteView):\n    model = Cliente\n    template_name = \"clientes_delete.html\"\n    success_url = \"/clientes/\"",
        "detail": "clientes.views",
        "documentation": {}
    },
    {
        "label": "ClientesDeleteView",
        "kind": 6,
        "importPath": "clientes.views",
        "description": "clientes.views",
        "peekOfCode": "class ClientesDeleteView(DeleteView):\n    model = Cliente\n    template_name = \"clientes_delete.html\"\n    success_url = \"/clientes/\"",
        "detail": "clientes.views",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "core.asgi",
        "description": "core.asgi",
        "peekOfCode": "application = get_asgi_application()",
        "detail": "core.asgi",
        "documentation": {}
    },
    {
        "label": "BASE_DIR",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "BASE_DIR = Path(__file__).resolve().parent.parent\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = os.getenv('SECRET_KEY')\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "SECRET_KEY",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "SECRET_KEY = os.getenv('SECRET_KEY')\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "DEBUG",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "DEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "ALLOWED_HOSTS",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "ALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'crispy_forms',",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "INSTALLED_APPS",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "INSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'crispy_forms',\n    'crispy_bootstrap5',\n    'clientes',",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "MIDDLEWARE",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "MIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\nROOT_URLCONF = 'core.urls'",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "ROOT_URLCONF",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "ROOT_URLCONF = 'core.urls'\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [os.path.join(BASE_DIR,\"core/templates\")],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "TEMPLATES",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "TEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [os.path.join(BASE_DIR,\"core/templates\")],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "WSGI_APPLICATION",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "WSGI_APPLICATION = 'core.wsgi.application'\n# Database\n# https://docs.djangoproject.com/en/5.1/ref/settings/#databases\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': BASE_DIR / 'db.sqlite3',\n    }\n}\n# Password validation",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "DATABASES",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "DATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': BASE_DIR / 'db.sqlite3',\n    }\n}\n# Password validation\n# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators\nAUTH_PASSWORD_VALIDATORS = [\n    {",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_PASSWORD_VALIDATORS",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "AUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "LANGUAGE_CODE",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "LANGUAGE_CODE = 'pt-br'\nTIME_ZONE = 'America/Sao_Paulo'\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.1/howto/static-files/\nSTATIC_URL = '/static/'\nSTATICFILES_DIRS = (os.path.join(BASE_DIR, 'core/templates/static'),)\nSTATIC_ROOT = os.path.join('static')\nMEDIA_ROOT = os.path.join(BASE_DIR, 'media')",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "TIME_ZONE",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "TIME_ZONE = 'America/Sao_Paulo'\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.1/howto/static-files/\nSTATIC_URL = '/static/'\nSTATICFILES_DIRS = (os.path.join(BASE_DIR, 'core/templates/static'),)\nSTATIC_ROOT = os.path.join('static')\nMEDIA_ROOT = os.path.join(BASE_DIR, 'media')\nMEDIA_URL = '/media/'",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "USE_I18N",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "USE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.1/howto/static-files/\nSTATIC_URL = '/static/'\nSTATICFILES_DIRS = (os.path.join(BASE_DIR, 'core/templates/static'),)\nSTATIC_ROOT = os.path.join('static')\nMEDIA_ROOT = os.path.join(BASE_DIR, 'media')\nMEDIA_URL = '/media/'\n# Default primary key field type",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "USE_TZ",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "USE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.1/howto/static-files/\nSTATIC_URL = '/static/'\nSTATICFILES_DIRS = (os.path.join(BASE_DIR, 'core/templates/static'),)\nSTATIC_ROOT = os.path.join('static')\nMEDIA_ROOT = os.path.join(BASE_DIR, 'media')\nMEDIA_URL = '/media/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_URL",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "STATIC_URL = '/static/'\nSTATICFILES_DIRS = (os.path.join(BASE_DIR, 'core/templates/static'),)\nSTATIC_ROOT = os.path.join('static')\nMEDIA_ROOT = os.path.join(BASE_DIR, 'media')\nMEDIA_URL = '/media/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nMEDIA_ROOT = os.path.join(BASE_DIR,\"media\")\nMEDIA_URL = \"/media/\"",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "STATICFILES_DIRS",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "STATICFILES_DIRS = (os.path.join(BASE_DIR, 'core/templates/static'),)\nSTATIC_ROOT = os.path.join('static')\nMEDIA_ROOT = os.path.join(BASE_DIR, 'media')\nMEDIA_URL = '/media/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nMEDIA_ROOT = os.path.join(BASE_DIR,\"media\")\nMEDIA_URL = \"/media/\"\nCRISPY_ALLOWED_TEMPLATE_PACKS = \"bootstrap5\"  # ou \"bootstrap4\"",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_ROOT",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "STATIC_ROOT = os.path.join('static')\nMEDIA_ROOT = os.path.join(BASE_DIR, 'media')\nMEDIA_URL = '/media/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nMEDIA_ROOT = os.path.join(BASE_DIR,\"media\")\nMEDIA_URL = \"/media/\"\nCRISPY_ALLOWED_TEMPLATE_PACKS = \"bootstrap5\"  # ou \"bootstrap4\"\nCRISPY_TEMPLATE_PACK = \"bootstrap5\"  # ou \"bootstrap4\"",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "MEDIA_ROOT",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "MEDIA_ROOT = os.path.join(BASE_DIR, 'media')\nMEDIA_URL = '/media/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nMEDIA_ROOT = os.path.join(BASE_DIR,\"media\")\nMEDIA_URL = \"/media/\"\nCRISPY_ALLOWED_TEMPLATE_PACKS = \"bootstrap5\"  # ou \"bootstrap4\"\nCRISPY_TEMPLATE_PACK = \"bootstrap5\"  # ou \"bootstrap4\"\nfrom django.contrib.messages import constants",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "MEDIA_URL",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "MEDIA_URL = '/media/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nMEDIA_ROOT = os.path.join(BASE_DIR,\"media\")\nMEDIA_URL = \"/media/\"\nCRISPY_ALLOWED_TEMPLATE_PACKS = \"bootstrap5\"  # ou \"bootstrap4\"\nCRISPY_TEMPLATE_PACK = \"bootstrap5\"  # ou \"bootstrap4\"\nfrom django.contrib.messages import constants\nMESSAGE_TAGS = {",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "DEFAULT_AUTO_FIELD",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nMEDIA_ROOT = os.path.join(BASE_DIR,\"media\")\nMEDIA_URL = \"/media/\"\nCRISPY_ALLOWED_TEMPLATE_PACKS = \"bootstrap5\"  # ou \"bootstrap4\"\nCRISPY_TEMPLATE_PACK = \"bootstrap5\"  # ou \"bootstrap4\"\nfrom django.contrib.messages import constants\nMESSAGE_TAGS = {\n    constants.DEBUG: 'alert-primary',\n    constants.ERROR: 'alert-danger',\n    constants.SUCCESS: 'alert-success',",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "MEDIA_ROOT",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "MEDIA_ROOT = os.path.join(BASE_DIR,\"media\")\nMEDIA_URL = \"/media/\"\nCRISPY_ALLOWED_TEMPLATE_PACKS = \"bootstrap5\"  # ou \"bootstrap4\"\nCRISPY_TEMPLATE_PACK = \"bootstrap5\"  # ou \"bootstrap4\"\nfrom django.contrib.messages import constants\nMESSAGE_TAGS = {\n    constants.DEBUG: 'alert-primary',\n    constants.ERROR: 'alert-danger',\n    constants.SUCCESS: 'alert-success',\n    constants.INFO: 'alert-info',",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "MEDIA_URL",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "MEDIA_URL = \"/media/\"\nCRISPY_ALLOWED_TEMPLATE_PACKS = \"bootstrap5\"  # ou \"bootstrap4\"\nCRISPY_TEMPLATE_PACK = \"bootstrap5\"  # ou \"bootstrap4\"\nfrom django.contrib.messages import constants\nMESSAGE_TAGS = {\n    constants.DEBUG: 'alert-primary',\n    constants.ERROR: 'alert-danger',\n    constants.SUCCESS: 'alert-success',\n    constants.INFO: 'alert-info',\n    constants.WARNING: 'alert-warning',",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "CRISPY_ALLOWED_TEMPLATE_PACKS",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "CRISPY_ALLOWED_TEMPLATE_PACKS = \"bootstrap5\"  # ou \"bootstrap4\"\nCRISPY_TEMPLATE_PACK = \"bootstrap5\"  # ou \"bootstrap4\"\nfrom django.contrib.messages import constants\nMESSAGE_TAGS = {\n    constants.DEBUG: 'alert-primary',\n    constants.ERROR: 'alert-danger',\n    constants.SUCCESS: 'alert-success',\n    constants.INFO: 'alert-info',\n    constants.WARNING: 'alert-warning',\n}",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "CRISPY_TEMPLATE_PACK",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "CRISPY_TEMPLATE_PACK = \"bootstrap5\"  # ou \"bootstrap4\"\nfrom django.contrib.messages import constants\nMESSAGE_TAGS = {\n    constants.DEBUG: 'alert-primary',\n    constants.ERROR: 'alert-danger',\n    constants.SUCCESS: 'alert-success',\n    constants.INFO: 'alert-info',\n    constants.WARNING: 'alert-warning',\n}",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "MESSAGE_TAGS",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "MESSAGE_TAGS = {\n    constants.DEBUG: 'alert-primary',\n    constants.ERROR: 'alert-danger',\n    constants.SUCCESS: 'alert-success',\n    constants.INFO: 'alert-info',\n    constants.WARNING: 'alert-warning',\n}",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "core.urls",
        "description": "core.urls",
        "peekOfCode": "urlpatterns = [\n    path('admin/', admin.site.urls),\n    path('clientes/',include(\"clientes.urls\")),\n    path('',include(\"movimentacoes.urls\")),\n    path('',include(\"bancos.urls\")),\n    path('operacoes/',include(\"operacoes.urls\")),\n]",
        "detail": "core.urls",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "core.wsgi",
        "description": "core.wsgi",
        "peekOfCode": "application = get_wsgi_application()",
        "detail": "core.wsgi",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "movimentacoes.migrations.0001_initial",
        "description": "movimentacoes.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        ('bancos', '0001_initial'),\n        ('clientes', '0001_initial'),\n        ('operacoes', '0001_initial'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Movimentacoes',",
        "detail": "movimentacoes.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "EntradaAdmin",
        "kind": 6,
        "importPath": "movimentacoes.admin",
        "description": "movimentacoes.admin",
        "peekOfCode": "class EntradaAdmin(admin.ModelAdmin):\n    def delete_all_entries(modeladmin, request, queryset):\n        queryset.delete()\n    list_display = ('cliente', 'descricao', 'valor', 'data', 'tipo_pagamento', 'situacao')\n    search_fields = ('descricao', \"cliente\" )  \n    list_filter = ('data', 'tipo_pagamento', 'situacao')\n    actions = [delete_all_entries]\n@admin.register(Saida)\nclass SaidaAdmin(admin.ModelAdmin):\n    def delete_all_saidas(modeladmin, request, queryset):",
        "detail": "movimentacoes.admin",
        "documentation": {}
    },
    {
        "label": "SaidaAdmin",
        "kind": 6,
        "importPath": "movimentacoes.admin",
        "description": "movimentacoes.admin",
        "peekOfCode": "class SaidaAdmin(admin.ModelAdmin):\n    def delete_all_saidas(modeladmin, request, queryset):\n        queryset.delete()\n    list_display = (\"tipo_despesa\", 'descricao', 'valor', 'data', 'tipo_pagamento', 'situacao')\n    search_fields = ('descricao', \"tipo_despesa\")  \n    list_filter = ('data', 'tipo_pagamento', 'situacao')\n    actions = [delete_all_saidas]",
        "detail": "movimentacoes.admin",
        "documentation": {}
    },
    {
        "label": "MovimentacoesConfig",
        "kind": 6,
        "importPath": "movimentacoes.apps",
        "description": "movimentacoes.apps",
        "peekOfCode": "class MovimentacoesConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'movimentacoes'",
        "detail": "movimentacoes.apps",
        "documentation": {}
    },
    {
        "label": "EntradaModelForm",
        "kind": 6,
        "importPath": "movimentacoes.forms",
        "description": "movimentacoes.forms",
        "peekOfCode": "class EntradaModelForm(forms.ModelForm):\n    data = forms.DateField(\n        widget=forms.DateInput(format='%Y-%m-%d', attrs={'type': 'date'}),\n        initial=datetime.today,\n        input_formats=['%Y-%m-%d']\n    )\n    class Meta:\n        model = Entrada\n        fields = \"__all__\"\n        widgets = {",
        "detail": "movimentacoes.forms",
        "documentation": {}
    },
    {
        "label": "SaidaModelForm",
        "kind": 6,
        "importPath": "movimentacoes.forms",
        "description": "movimentacoes.forms",
        "peekOfCode": "class SaidaModelForm(forms.ModelForm):\n    data = forms.DateField(\n        widget=forms.DateInput(format='%Y-%m-%d', attrs={'type': 'date'}),\n        initial=datetime.today,\n        input_formats=['%Y-%m-%d']\n    )\n    class Meta:\n        model = Saida\n        fields = \"__all__\"\n        widgets = {",
        "detail": "movimentacoes.forms",
        "documentation": {}
    },
    {
        "label": "Situacao",
        "kind": 6,
        "importPath": "movimentacoes.models",
        "description": "movimentacoes.models",
        "peekOfCode": "class Situacao(models.TextChoices):\n    PAGO = 'PG', \"Pago\"\n    A_PAGAR = 'AP', \"A pagar\"\nclass Movimentacoes(models.Model):\n    descricao = models.CharField(max_length=200, null=True, blank=True)\n    valor = models.DecimalField(max_digits=12, decimal_places=2)\n    data = models.DateField()\n    conta = models.ForeignKey(ContaBancaria, on_delete=models.PROTECT)\n    tipo_pagamento = models.ForeignKey(TipoPagamento, on_delete=models.PROTECT, related_name='pagamentos')\n    situacao = models.CharField(max_length=2, choices=Situacao.choices, default=Situacao.A_PAGAR)",
        "detail": "movimentacoes.models",
        "documentation": {}
    },
    {
        "label": "Movimentacoes",
        "kind": 6,
        "importPath": "movimentacoes.models",
        "description": "movimentacoes.models",
        "peekOfCode": "class Movimentacoes(models.Model):\n    descricao = models.CharField(max_length=200, null=True, blank=True)\n    valor = models.DecimalField(max_digits=12, decimal_places=2)\n    data = models.DateField()\n    conta = models.ForeignKey(ContaBancaria, on_delete=models.PROTECT)\n    tipo_pagamento = models.ForeignKey(TipoPagamento, on_delete=models.PROTECT, related_name='pagamentos')\n    situacao = models.CharField(max_length=2, choices=Situacao.choices, default=Situacao.A_PAGAR)\n    @property\n    def valor_formatado(self):\n        return f\"R$ {self.valor:,.2f}\".replace(',', 'X').replace('.', ',').replace('X', '.')",
        "detail": "movimentacoes.models",
        "documentation": {}
    },
    {
        "label": "Entrada",
        "kind": 6,
        "importPath": "movimentacoes.models",
        "description": "movimentacoes.models",
        "peekOfCode": "class Entrada(Movimentacoes):\n    tipo_receita = models.ForeignKey(TipoReceita, on_delete=models.PROTECT, related_name='receitas', null=True)\n    cliente = models.ForeignKey(Cliente, on_delete=models.PROTECT, default=None)\n    def __str__(self):\n        return f'Entrada: {self.valor} - {self.descricao}'\nclass Saida(Movimentacoes):\n    tipo_despesa = models.ForeignKey(TipoDespesa, on_delete=models.PROTECT,related_name='despesas')\n    def __str__(self):\n        return f'Saída: {self.valor} - {self.descricao}'\n    # def save(self, *args, **kwargs):",
        "detail": "movimentacoes.models",
        "documentation": {}
    },
    {
        "label": "Saida",
        "kind": 6,
        "importPath": "movimentacoes.models",
        "description": "movimentacoes.models",
        "peekOfCode": "class Saida(Movimentacoes):\n    tipo_despesa = models.ForeignKey(TipoDespesa, on_delete=models.PROTECT,related_name='despesas')\n    def __str__(self):\n        return f'Saída: {self.valor} - {self.descricao}'\n    # def save(self, *args, **kwargs):\n    #     # Verifica se a saída é nova (ou seja, ainda não tem um ID) ou se a situação mudou para 'Pago'\n    #     if self.pk is None or Saida.objects.get(pk=self.pk).situacao != 'PG':\n    #         # Se a situação é \"PG\" (Pago), diminui o valor no saldo atual da conta\n    #         if self.situacao == 'PG':\n    #             self.conta.saldo_atual -= self.valor",
        "detail": "movimentacoes.models",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "movimentacoes.urls",
        "description": "movimentacoes.urls",
        "peekOfCode": "urlpatterns = [\n    path('', DashboardView.as_view(), name='dashboard'),  # Tela inicial\n    # URLs de Entrada\n    path('entradas/', EntradaListView.as_view(), name='entrada-list'),\n    path('entradas/<int:pk>/', EntradaDetailView.as_view(), name='entrada-detail'),\n    path('entradas/nova/', EntradaCreateView.as_view(), name='entrada-create'),\n    path('entradas/<int:pk>/editar/', EntradaUpdateView.as_view(), name='entrada-update'),\n    path('entradas/<int:pk>/deletar/', EntradaDeleteView.as_view(), name='entrada-delete'),\n    # URLs de Saida\n    path('saidas/', SaidaListView.as_view(), name='saida-list'),",
        "detail": "movimentacoes.urls",
        "documentation": {}
    },
    {
        "label": "EntradaListView",
        "kind": 6,
        "importPath": "movimentacoes.views",
        "description": "movimentacoes.views",
        "peekOfCode": "class EntradaListView(ListView):\n    '''LISTAGEM DE ENTRADAS'''\n    model = Entrada\n    template_name = 'entrada/entrada_list.html'\n    context_object_name = 'entradas'\n# Detalhes de uma Entrada\nclass EntradaDetailView(DetailView):\n    '''DETALHAMENTO DE ENTRADAS'''\n    model = Entrada\n    template_name = 'entrada/entrada_detail.html'",
        "detail": "movimentacoes.views",
        "documentation": {}
    },
    {
        "label": "EntradaDetailView",
        "kind": 6,
        "importPath": "movimentacoes.views",
        "description": "movimentacoes.views",
        "peekOfCode": "class EntradaDetailView(DetailView):\n    '''DETALHAMENTO DE ENTRADAS'''\n    model = Entrada\n    template_name = 'entrada/entrada_detail.html'\n    context_object_name = 'entrada'\nclass EntradaCreateView(CreateView):\n    '''CRIAÇÃO DE ENTRADA'''\n    model = Entrada\n    template_name = 'entrada/entrada_form.html'\n    form_class = EntradaModelForm",
        "detail": "movimentacoes.views",
        "documentation": {}
    },
    {
        "label": "EntradaCreateView",
        "kind": 6,
        "importPath": "movimentacoes.views",
        "description": "movimentacoes.views",
        "peekOfCode": "class EntradaCreateView(CreateView):\n    '''CRIAÇÃO DE ENTRADA'''\n    model = Entrada\n    template_name = 'entrada/entrada_form.html'\n    form_class = EntradaModelForm\n    success_url = reverse_lazy('entrada-list')\n    def form_valid(self, form):\n        # Salvar a entrada primeiro\n        entrada = form.save(commit=False)\n        entradas_existentes = Entrada.objects.filter(",
        "detail": "movimentacoes.views",
        "documentation": {}
    },
    {
        "label": "EntradaUpdateView",
        "kind": 6,
        "importPath": "movimentacoes.views",
        "description": "movimentacoes.views",
        "peekOfCode": "class EntradaUpdateView(UpdateView):\n    '''ATUALIZAÇÃO DE UMA ENTRADA'''\n    model = Entrada\n    template_name = 'entrada/entrada_form.html'\n    form_class = EntradaModelForm\n    success_url = reverse_lazy('entrada-list')\n    def form_valid(self, form):\n        # Obter a entrada antiga para comparar os valores anteriores\n        entrada_antiga = Entrada.objects.get(pk=self.object.pk)\n        entrada_nova = form.save(commit=False)",
        "detail": "movimentacoes.views",
        "documentation": {}
    },
    {
        "label": "EntradaDeleteView",
        "kind": 6,
        "importPath": "movimentacoes.views",
        "description": "movimentacoes.views",
        "peekOfCode": "class EntradaDeleteView(DeleteView):\n    '''EXCLUSÃO DE UMA ENTRADA'''\n    model = Entrada\n    template_name = 'entrada/entrada_confirm_delete.html'\n    success_url = reverse_lazy('entrada-list')\n    def post(self, request, pk):\n        entrada = get_object_or_404(Entrada, pk=pk)\n        conta_bancaria = entrada.conta\n        # Subtrai o valor da entrada do saldo atual da conta bancária\n        if entrada.situacao == 'PG':",
        "detail": "movimentacoes.views",
        "documentation": {}
    },
    {
        "label": "SaidaListView",
        "kind": 6,
        "importPath": "movimentacoes.views",
        "description": "movimentacoes.views",
        "peekOfCode": "class SaidaListView(ListView):\n    '''LISTAGEM DE SAÍDAS'''\n    model = Saida\n    template_name = 'saida/saida_list.html'\n    context_object_name = 'saidas'\n    ordering = ['data']\nclass SaidaDetailView(DetailView):\n    '''DETALHES DE UMA SAÍDA'''\n    model = Saida\n    template_name = 'saida/saida_detail.html'",
        "detail": "movimentacoes.views",
        "documentation": {}
    },
    {
        "label": "SaidaDetailView",
        "kind": 6,
        "importPath": "movimentacoes.views",
        "description": "movimentacoes.views",
        "peekOfCode": "class SaidaDetailView(DetailView):\n    '''DETALHES DE UMA SAÍDA'''\n    model = Saida\n    template_name = 'saida/saida_detail.html'\n    context_object_name = 'saida'\nclass SaidaCreateView(CreateView):\n    '''CRIAÇÃO DE UMA SAÍDA'''\n    model = Saida\n    template_name = 'saida/saida_form.html'\n    form_class = SaidaModelForm",
        "detail": "movimentacoes.views",
        "documentation": {}
    },
    {
        "label": "SaidaCreateView",
        "kind": 6,
        "importPath": "movimentacoes.views",
        "description": "movimentacoes.views",
        "peekOfCode": "class SaidaCreateView(CreateView):\n    '''CRIAÇÃO DE UMA SAÍDA'''\n    model = Saida\n    template_name = 'saida/saida_form.html'\n    form_class = SaidaModelForm\n    success_url = reverse_lazy('saida-list')\n    def form_valid(self, form):\n        saida = form.save(commit=False)\n        # Verifica se a saída já existe\n        saida_existente = Saida.objects.filter(",
        "detail": "movimentacoes.views",
        "documentation": {}
    },
    {
        "label": "SaidaUpdateView",
        "kind": 6,
        "importPath": "movimentacoes.views",
        "description": "movimentacoes.views",
        "peekOfCode": "class SaidaUpdateView(UpdateView):\n    '''ATUALIZAÇÃO DE UMA SAÍDA'''\n    model = Saida\n    template_name = 'saida/saida_form.html'\n    form_class = SaidaModelForm\n    success_url = reverse_lazy('saida-list')\n    def form_valid(self, form):\n        saida = form.save(commit=False)\n        # Verifica se a saída já existe\n        saida_existente = Saida.objects.filter(",
        "detail": "movimentacoes.views",
        "documentation": {}
    },
    {
        "label": "SaidaDeleteView",
        "kind": 6,
        "importPath": "movimentacoes.views",
        "description": "movimentacoes.views",
        "peekOfCode": "class SaidaDeleteView(DeleteView):\n    '''EXCLUSÃO DE UMA SAÍDA'''\n    model = Saida\n    template_name = 'saida/saida_confirm_delete.html'\n    success_url = reverse_lazy('saida-list')\n    def post(self, request, pk):\n        saida = get_object_or_404(Saida, pk=pk)\n        conta_bancaria = saida.conta\n        # Subtrai o valor da saida do saldo atual da conta bancária\n        if saida.situacao == \"PG\":",
        "detail": "movimentacoes.views",
        "documentation": {}
    },
    {
        "label": "DashboardView",
        "kind": 6,
        "importPath": "movimentacoes.views",
        "description": "movimentacoes.views",
        "peekOfCode": "class DashboardView(TemplateView):\n    template_name = 'dashboard.html'\n    def get_context_data(self, **kwargs):\n        context = super().get_context_data(**kwargs)\n        # Pega o mês do GET, se não houver, usa o mês atual\n        mes = self.request.GET.get('mes', timezone.now().month)\n        ano = timezone.now().year  # você pode querer adicionar uma opção para o ano\n        entradas = Entrada.objects.filter(data__month=mes, data__year=ano).order_by('data')\n        saidas = Saida.objects.filter(data__month=mes, data__year=ano).order_by('data')\n        contas = ContaBancaria.objects.all()",
        "detail": "movimentacoes.views",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "operacoes.migrations.0001_initial",
        "description": "operacoes.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Operacoes',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('nome', models.CharField(max_length=100, unique=True)),",
        "detail": "operacoes.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "operacoes.migrations.0002_operacoes_xpto",
        "description": "operacoes.migrations.0002_operacoes_xpto",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('operacoes', '0001_initial'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='operacoes',\n            name='xpto',\n            field=models.CharField(blank=True, max_length=1, null=True),\n        ),",
        "detail": "operacoes.migrations.0002_operacoes_xpto",
        "documentation": {}
    },
    {
        "label": "create_default_tipos_despesas",
        "kind": 2,
        "importPath": "operacoes.migrations.0002_operacoes_xpto",
        "description": "operacoes.migrations.0002_operacoes_xpto",
        "peekOfCode": "def create_default_tipos_despesas(apps, schema_editor):\n    # Obtenha o modelo 'TipoDespesa'\n    TipoDespesa = apps.get_model('operacoes', 'TipoDespesa')\n    # Crie as despesas padrão\n    despesas_default = [\n        'Salário',\n        'Aluguel',\n        'Contas de Serviços',\n        'Materiais',\n        'Despesas Diversas'",
        "detail": "operacoes.migrations.0002_operacoes_xpto",
        "documentation": {}
    },
    {
        "label": "create_default_tipos_pagamentos",
        "kind": 2,
        "importPath": "operacoes.migrations.0002_operacoes_xpto",
        "description": "operacoes.migrations.0002_operacoes_xpto",
        "peekOfCode": "def create_default_tipos_pagamentos(apps, schema_editor):\n    # Obtenha o modelo 'TipoPagamento'\n    TipoPagamento = apps.get_model('operacoes', 'TipoPagamento')\n    # Crie os pagamentos padrão\n    pagamentos_default = [\n        'Transferência Bancária',\n        'Cartão de Crédito',\n        'Cartão de Débito',\n        'Boleto',\n        'Dinheiro'",
        "detail": "operacoes.migrations.0002_operacoes_xpto",
        "documentation": {}
    },
    {
        "label": "create_default_tipos_receitas",
        "kind": 2,
        "importPath": "operacoes.migrations.0002_operacoes_xpto",
        "description": "operacoes.migrations.0002_operacoes_xpto",
        "peekOfCode": "def create_default_tipos_receitas(apps, schema_editor):\n    # Obtenha o modelo 'TipoReceita'\n    TipoReceita = apps.get_model('operacoes', 'TipoReceita')\n    # Crie as receitas padrão\n    receitas_default = [\n        'Venda de Serviços',\n        'Consultoria',\n        'Receitas de Aluguel',\n        'Investimentos',\n        'Receitas Diversas'",
        "detail": "operacoes.migrations.0002_operacoes_xpto",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "operacoes.migrations.0003_remove_operacoes_xpto",
        "description": "operacoes.migrations.0003_remove_operacoes_xpto",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('operacoes', '0002_operacoes_xpto'),\n    ]\n    operations = [\n        migrations.RemoveField(\n            model_name='operacoes',\n            name='xpto',\n        ),\n    ]",
        "detail": "operacoes.migrations.0003_remove_operacoes_xpto",
        "documentation": {}
    },
    {
        "label": "TipoReceitaAdmin",
        "kind": 6,
        "importPath": "operacoes.admin",
        "description": "operacoes.admin",
        "peekOfCode": "class TipoReceitaAdmin(admin.ModelAdmin):\n    list_display = ('nome','status')\n    search_fields = ('nome',)\n    list_filter = ('status',)\n@admin.register(TipoDespesa)\nclass TipoDespesaAdmin(admin.ModelAdmin):\n    list_display = ('nome','status')\n    search_fields = ('nome',)\n    list_filter = ('status',)\n@admin.register(TipoPagamento)",
        "detail": "operacoes.admin",
        "documentation": {}
    },
    {
        "label": "TipoDespesaAdmin",
        "kind": 6,
        "importPath": "operacoes.admin",
        "description": "operacoes.admin",
        "peekOfCode": "class TipoDespesaAdmin(admin.ModelAdmin):\n    list_display = ('nome','status')\n    search_fields = ('nome',)\n    list_filter = ('status',)\n@admin.register(TipoPagamento)\nclass TipoPagamentoAdmin(admin.ModelAdmin):\n    list_display = ('nome','status')\n    search_fields = ('nome',)\n    list_filter = ('status',)",
        "detail": "operacoes.admin",
        "documentation": {}
    },
    {
        "label": "TipoPagamentoAdmin",
        "kind": 6,
        "importPath": "operacoes.admin",
        "description": "operacoes.admin",
        "peekOfCode": "class TipoPagamentoAdmin(admin.ModelAdmin):\n    list_display = ('nome','status')\n    search_fields = ('nome',)\n    list_filter = ('status',)",
        "detail": "operacoes.admin",
        "documentation": {}
    },
    {
        "label": "OperacoesConfig",
        "kind": 6,
        "importPath": "operacoes.apps",
        "description": "operacoes.apps",
        "peekOfCode": "class OperacoesConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'operacoes'",
        "detail": "operacoes.apps",
        "documentation": {}
    },
    {
        "label": "TipoReceitaModelForm",
        "kind": 6,
        "importPath": "operacoes.forms",
        "description": "operacoes.forms",
        "peekOfCode": "class TipoReceitaModelForm(forms.ModelForm):\n    class Meta:\n        model = TipoReceita\n        fields = '__all__'\nclass TipoDespesaModelForm(forms.ModelForm):\n    class Meta:\n        model = TipoDespesa\n        fields = '__all__'\nclass TipoPagamentoModelForm(forms.ModelForm):\n    class Meta:",
        "detail": "operacoes.forms",
        "documentation": {}
    },
    {
        "label": "TipoDespesaModelForm",
        "kind": 6,
        "importPath": "operacoes.forms",
        "description": "operacoes.forms",
        "peekOfCode": "class TipoDespesaModelForm(forms.ModelForm):\n    class Meta:\n        model = TipoDespesa\n        fields = '__all__'\nclass TipoPagamentoModelForm(forms.ModelForm):\n    class Meta:\n        model = TipoPagamento\n        fields = '__all__'",
        "detail": "operacoes.forms",
        "documentation": {}
    },
    {
        "label": "TipoPagamentoModelForm",
        "kind": 6,
        "importPath": "operacoes.forms",
        "description": "operacoes.forms",
        "peekOfCode": "class TipoPagamentoModelForm(forms.ModelForm):\n    class Meta:\n        model = TipoPagamento\n        fields = '__all__'",
        "detail": "operacoes.forms",
        "documentation": {}
    },
    {
        "label": "Status",
        "kind": 6,
        "importPath": "operacoes.models",
        "description": "operacoes.models",
        "peekOfCode": "class Status(models.TextChoices):\n    ATIVO = 'AT', \"Ativo\"\n    INATIVO = 'IN', \"Inativo\"\nclass Operacoes(models.Model):\n    nome = models.CharField(max_length=100, unique=True)\n    descricao = models.TextField(blank=True, null=True)\n    status = models.CharField(max_length=2,\n                                choices=Status.choices, \n                                default=Status.ATIVO)\n    def __str__(self) -> str:",
        "detail": "operacoes.models",
        "documentation": {}
    },
    {
        "label": "Operacoes",
        "kind": 6,
        "importPath": "operacoes.models",
        "description": "operacoes.models",
        "peekOfCode": "class Operacoes(models.Model):\n    nome = models.CharField(max_length=100, unique=True)\n    descricao = models.TextField(blank=True, null=True)\n    status = models.CharField(max_length=2,\n                                choices=Status.choices, \n                                default=Status.ATIVO)\n    def __str__(self) -> str:\n        return self.nome\n    @property\n    def status_formatado(self):",
        "detail": "operacoes.models",
        "documentation": {}
    },
    {
        "label": "TipoPagamento",
        "kind": 6,
        "importPath": "operacoes.models",
        "description": "operacoes.models",
        "peekOfCode": "class TipoPagamento(Operacoes): \n    ...\nclass TipoDespesa(Operacoes):\n    ...\nclass TipoReceita(Operacoes):\n    ...",
        "detail": "operacoes.models",
        "documentation": {}
    },
    {
        "label": "TipoDespesa",
        "kind": 6,
        "importPath": "operacoes.models",
        "description": "operacoes.models",
        "peekOfCode": "class TipoDespesa(Operacoes):\n    ...\nclass TipoReceita(Operacoes):\n    ...",
        "detail": "operacoes.models",
        "documentation": {}
    },
    {
        "label": "TipoReceita",
        "kind": 6,
        "importPath": "operacoes.models",
        "description": "operacoes.models",
        "peekOfCode": "class TipoReceita(Operacoes):\n    ...",
        "detail": "operacoes.models",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "operacoes.urls",
        "description": "operacoes.urls",
        "peekOfCode": "urlpatterns = [\n    # URLs de Operacoes\n    path('', OperacoesListView.as_view(), name='operacao-list'),\n    path('criar/', CriarOperacaoView.as_view(), name='operacao-criar'),\n    path('receita/criar/', TipoReceitaCreateView.as_view(), name='tipo_receita_create'),\n    path('despesa/criar/', TipoDespesaCreateView.as_view(), name='tipo_despesa_create'),\n    path('pagamento/criar/', TipoPagamentoCreateView.as_view(), name='tipo_pagamento_create'),\n    path('receitas/<int:pk>/', TipoReceitaDetailView.as_view(), name='tipo_detail'),\n    path('despesas/<int:pk>/', TipoDespesaDetailView.as_view(), name='tipo_detail'),\n    path('pagamentos/<int:pk>/', TipoPagamentoDetailView.as_view(), name='tipo_detail'),",
        "detail": "operacoes.urls",
        "documentation": {}
    },
    {
        "label": "OperacoesListView",
        "kind": 6,
        "importPath": "operacoes.views",
        "description": "operacoes.views",
        "peekOfCode": "class OperacoesListView(TemplateView):\n    '''LISTAGEM DE OPERAÇÕES '''\n    template_name = 'operacao_list.html'\n    def get_context_data(self, **kwargs):\n        context = super().get_context_data(**kwargs)\n        tipo_despesa = TipoDespesa.objects.all()\n        tipo_receita = TipoReceita.objects.all()\n        tipo_pagamento = TipoPagamento.objects.all()\n        # Unificando as operações com os campos comuns\n        operacoes = []",
        "detail": "operacoes.views",
        "documentation": {}
    },
    {
        "label": "CriarOperacaoView",
        "kind": 6,
        "importPath": "operacoes.views",
        "description": "operacoes.views",
        "peekOfCode": "class CriarOperacaoView(TemplateView):\n    template_name = 'operacao_criar.html'\n    def post(self, request, *args, **kwargs):\n        tipo_operacao = request.POST.get('tipo_operacao')\n        if tipo_operacao == 'receita':\n            return redirect('tipo_receita_create')\n        elif tipo_operacao == 'despesa':\n            return redirect('tipo_despesa_create')\n        elif tipo_operacao == 'pagamento':\n            return redirect('tipo_pagamento_create')",
        "detail": "operacoes.views",
        "documentation": {}
    },
    {
        "label": "TipoReceitaCreateView",
        "kind": 6,
        "importPath": "operacoes.views",
        "description": "operacoes.views",
        "peekOfCode": "class TipoReceitaCreateView(CreateView):\n    '''CRIAÇÃO DE UM TIPO DE RECEITA'''\n    model = TipoReceita\n    template_name = 'operacao_form.html'\n    form_class = TipoReceitaModelForm\n    success_url = reverse_lazy('operacao-list')\n    def get_initial(self):\n        initial = super().get_initial()\n        initial['status'] = 'AT'  # Define o status como ativo por padrão\n        return initial",
        "detail": "operacoes.views",
        "documentation": {}
    },
    {
        "label": "TipoReceitaDetailView",
        "kind": 6,
        "importPath": "operacoes.views",
        "description": "operacoes.views",
        "peekOfCode": "class TipoReceitaDetailView(DetailView):\n    '''DETALHAMENTO DE UM TIPO DE RECEITA'''\n    model = TipoReceita\n    template_name = 'receita/receita_detail.html'\n    context_object_name = 'tipo'\nclass TipoReceitaUpdateView(UpdateView):\n    '''ATUALIZAÇÃO DE UM TIPO'''\n    model = TipoReceita\n    template_name = 'operacao_form.html'\n    form_class = TipoReceitaModelForm",
        "detail": "operacoes.views",
        "documentation": {}
    },
    {
        "label": "TipoReceitaUpdateView",
        "kind": 6,
        "importPath": "operacoes.views",
        "description": "operacoes.views",
        "peekOfCode": "class TipoReceitaUpdateView(UpdateView):\n    '''ATUALIZAÇÃO DE UM TIPO'''\n    model = TipoReceita\n    template_name = 'operacao_form.html'\n    form_class = TipoReceitaModelForm\n    success_url = reverse_lazy('operacao-list')\nclass TipoReceitaDeleteView(DeleteView):\n    '''EXCLUSÃO DE UM TIPO'''\n    model = TipoReceita\n    template_name = 'operacao_confirm_delete.html'",
        "detail": "operacoes.views",
        "documentation": {}
    },
    {
        "label": "TipoReceitaDeleteView",
        "kind": 6,
        "importPath": "operacoes.views",
        "description": "operacoes.views",
        "peekOfCode": "class TipoReceitaDeleteView(DeleteView):\n    '''EXCLUSÃO DE UM TIPO'''\n    model = TipoReceita\n    template_name = 'operacao_confirm_delete.html'\n    success_url = reverse_lazy('operacao-list')\n##### CRUD DE TIPOS DE DESPESAS ######\nclass TipoDespesaCreateView(CreateView):\n    '''CRIAÇÃO DE UM TIPO DE DESPESA'''\n    model = TipoDespesa\n    template_name = 'operacao_form.html'",
        "detail": "operacoes.views",
        "documentation": {}
    },
    {
        "label": "TipoDespesaCreateView",
        "kind": 6,
        "importPath": "operacoes.views",
        "description": "operacoes.views",
        "peekOfCode": "class TipoDespesaCreateView(CreateView):\n    '''CRIAÇÃO DE UM TIPO DE DESPESA'''\n    model = TipoDespesa\n    template_name = 'operacao_form.html'\n    form_class = TipoDespesaModelForm\n    success_url = reverse_lazy('operacao-list')\n    def get_initial(self):\n        initial = super().get_initial()\n        initial['status'] = 'AT'  # Define o status como ativo por padrão\n        return initial",
        "detail": "operacoes.views",
        "documentation": {}
    },
    {
        "label": "TipoDespesaDetailView",
        "kind": 6,
        "importPath": "operacoes.views",
        "description": "operacoes.views",
        "peekOfCode": "class TipoDespesaDetailView(DetailView):\n    '''DETALHAMENTO DE UM TIPO DE DESPESA'''\n    model = TipoDespesa\n    template_name = 'receita/receita_detail.html'\n    context_object_name = 'tipo'\nclass TipoDespesaUpdateView(UpdateView):\n    '''ATUALIZAÇÃO DE UM TIPO DE DESPESA'''\n    model = TipoDespesa\n    template_name = 'operacao_form.html'\n    form_class = TipoDespesaModelForm",
        "detail": "operacoes.views",
        "documentation": {}
    },
    {
        "label": "TipoDespesaUpdateView",
        "kind": 6,
        "importPath": "operacoes.views",
        "description": "operacoes.views",
        "peekOfCode": "class TipoDespesaUpdateView(UpdateView):\n    '''ATUALIZAÇÃO DE UM TIPO DE DESPESA'''\n    model = TipoDespesa\n    template_name = 'operacao_form.html'\n    form_class = TipoDespesaModelForm\n    success_url = reverse_lazy('operacao-list')\nclass TipoDespesaDeleteView(DeleteView):\n    '''EXCLUSÃO DE UM TIPO DE DESPESA'''\n    model = TipoDespesa\n    template_name = 'operacao_confirm_delete.html'",
        "detail": "operacoes.views",
        "documentation": {}
    },
    {
        "label": "TipoDespesaDeleteView",
        "kind": 6,
        "importPath": "operacoes.views",
        "description": "operacoes.views",
        "peekOfCode": "class TipoDespesaDeleteView(DeleteView):\n    '''EXCLUSÃO DE UM TIPO DE DESPESA'''\n    model = TipoDespesa\n    template_name = 'operacao_confirm_delete.html'\n    success_url = reverse_lazy('operacao-list')\n##### CRUD DE TIPOS DE PAGAMENTOS ######\nclass TipoPagamentoCreateView(CreateView):\n    '''CRIAÇÃO DE UM TIPO DE PAGAMENTOS'''\n    model = TipoPagamento\n    template_name = 'operacao_form.html'",
        "detail": "operacoes.views",
        "documentation": {}
    },
    {
        "label": "TipoPagamentoCreateView",
        "kind": 6,
        "importPath": "operacoes.views",
        "description": "operacoes.views",
        "peekOfCode": "class TipoPagamentoCreateView(CreateView):\n    '''CRIAÇÃO DE UM TIPO DE PAGAMENTOS'''\n    model = TipoPagamento\n    template_name = 'operacao_form.html'\n    form_class = TipoPagamentoModelForm\n    success_url = reverse_lazy('operacao-list')\n    def get_initial(self):\n        initial = super().get_initial()\n        initial['status'] = 'AT'  # Define o status como ativo por padrão\n        return initial",
        "detail": "operacoes.views",
        "documentation": {}
    },
    {
        "label": "TipoPagamentoDetailView",
        "kind": 6,
        "importPath": "operacoes.views",
        "description": "operacoes.views",
        "peekOfCode": "class TipoPagamentoDetailView(DetailView):\n    '''DETALHAMENTO DE UM TIPO DE PAGAMENTOS'''\n    model = TipoPagamento\n    template_name = 'receita/receita_detail.html'\n    context_object_name = 'tipo'\nclass TipoPagamentoUpdateView(UpdateView):\n    '''ATUALIZAÇÃO DE UM TIPO DE PAGAMENTOS'''\n    model = TipoPagamento\n    template_name = 'operacao_form.html'\n    form_class = TipoPagamentoModelForm",
        "detail": "operacoes.views",
        "documentation": {}
    },
    {
        "label": "TipoPagamentoUpdateView",
        "kind": 6,
        "importPath": "operacoes.views",
        "description": "operacoes.views",
        "peekOfCode": "class TipoPagamentoUpdateView(UpdateView):\n    '''ATUALIZAÇÃO DE UM TIPO DE PAGAMENTOS'''\n    model = TipoPagamento\n    template_name = 'operacao_form.html'\n    form_class = TipoPagamentoModelForm\n    success_url = reverse_lazy('operacao-list')\nclass TipoPagamentoDeleteView(DeleteView):\n    '''EXCLUSÃO DE UM TIPO DE PAGAMENTOS'''\n    model = TipoPagamento\n    template_name = 'operacao_confirm_delete.html'",
        "detail": "operacoes.views",
        "documentation": {}
    },
    {
        "label": "TipoPagamentoDeleteView",
        "kind": 6,
        "importPath": "operacoes.views",
        "description": "operacoes.views",
        "peekOfCode": "class TipoPagamentoDeleteView(DeleteView):\n    '''EXCLUSÃO DE UM TIPO DE PAGAMENTOS'''\n    model = TipoPagamento\n    template_name = 'operacao_confirm_delete.html'\n    success_url = reverse_lazy('operacao-list')",
        "detail": "operacoes.views",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "manage",
        "description": "manage",
        "peekOfCode": "def main():\n    \"\"\"Run administrative tasks.\"\"\"\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'core.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"\n            \"forget to activate a virtual environment?\"",
        "detail": "manage",
        "documentation": {}
    }
]