[
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "Cliente",
        "importPath": "clientes.models",
        "description": "clientes.models",
        "isExtraImport": true,
        "detail": "clientes.models",
        "documentation": {}
    },
    {
        "label": "Cliente",
        "importPath": "clientes.models",
        "description": "clientes.models",
        "isExtraImport": true,
        "detail": "clientes.models",
        "documentation": {}
    },
    {
        "label": "Cliente",
        "importPath": "clientes.models",
        "description": "clientes.models",
        "isExtraImport": true,
        "detail": "clientes.models",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "forms",
        "importPath": "django",
        "description": "django",
        "isExtraImport": true,
        "detail": "django",
        "documentation": {}
    },
    {
        "label": "CPF",
        "importPath": "validate_docbr",
        "description": "validate_docbr",
        "isExtraImport": true,
        "detail": "validate_docbr",
        "documentation": {}
    },
    {
        "label": "CNPJ",
        "importPath": "validate_docbr",
        "description": "validate_docbr",
        "isExtraImport": true,
        "detail": "validate_docbr",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "reverse_lazy",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "ClientesListView",
        "importPath": "clientes.views",
        "description": "clientes.views",
        "isExtraImport": true,
        "detail": "clientes.views",
        "documentation": {}
    },
    {
        "label": "ClienteCreateView",
        "importPath": "clientes.views",
        "description": "clientes.views",
        "isExtraImport": true,
        "detail": "clientes.views",
        "documentation": {}
    },
    {
        "label": "ClientesUpdateView",
        "importPath": "clientes.views",
        "description": "clientes.views",
        "isExtraImport": true,
        "detail": "clientes.views",
        "documentation": {}
    },
    {
        "label": "ClientesDeleteView",
        "importPath": "clientes.views",
        "description": "clientes.views",
        "isExtraImport": true,
        "detail": "clientes.views",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "ListView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "CreateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "DetailView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "UpdateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "DeleteView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "get_asgi_application",
        "importPath": "django.core.asgi",
        "description": "django.core.asgi",
        "isExtraImport": true,
        "detail": "django.core.asgi",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "load_dotenv",
        "importPath": "dotenv",
        "description": "dotenv",
        "isExtraImport": true,
        "detail": "dotenv",
        "documentation": {}
    },
    {
        "label": "get_wsgi_application",
        "importPath": "django.core.wsgi",
        "description": "django.core.wsgi",
        "isExtraImport": true,
        "detail": "django.core.wsgi",
        "documentation": {}
    },
    {
        "label": "django.db.models.deletion",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.db.models.deletion",
        "description": "django.db.models.deletion",
        "detail": "django.db.models.deletion",
        "documentation": {}
    },
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "clientes.migrations.0001_initial",
        "description": "clientes.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Clientes',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('nome_fantasia', models.CharField(max_length=80)),",
        "detail": "clientes.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "clientes.migrations.0002_clientes_complemento",
        "description": "clientes.migrations.0002_clientes_complemento",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('clientes', '0001_initial'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='clientes',\n            name='complemento',\n            field=models.CharField(blank=True, max_length=100, null=True),\n        ),",
        "detail": "clientes.migrations.0002_clientes_complemento",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "clientes.migrations.0003_clientes_tipo_pessoa",
        "description": "clientes.migrations.0003_clientes_tipo_pessoa",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('clientes', '0002_clientes_complemento'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='clientes',\n            name='tipo_pessoa',\n            field=models.CharField(blank=True, choices=[('pf', 'Pessoa física'), ('pj', 'Pessoa jurídica')], max_length=20, null=True),\n        ),",
        "detail": "clientes.migrations.0003_clientes_tipo_pessoa",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "clientes.migrations.0004_rename_clientes_cliente_rename_cnpj_cliente_cnpj_cpf",
        "description": "clientes.migrations.0004_rename_clientes_cliente_rename_cnpj_cliente_cnpj_cpf",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('clientes', '0003_clientes_tipo_pessoa'),\n    ]\n    operations = [\n        migrations.RenameModel(\n            old_name='Clientes',\n            new_name='Cliente',\n        ),\n        migrations.RenameField(",
        "detail": "clientes.migrations.0004_rename_clientes_cliente_rename_cnpj_cliente_cnpj_cpf",
        "documentation": {}
    },
    {
        "label": "ClientesAdmin",
        "kind": 6,
        "importPath": "clientes.admin",
        "description": "clientes.admin",
        "peekOfCode": "class ClientesAdmin(admin.ModelAdmin):\n    list_display=(\"nome_fantasia\", \"razao_social\", \"cnpj_cpf\", \"cep\", 'endereco')\n    search_fields = (\"nome_fantasia\", \"cnpj_cpf\")\nadmin.site.register(Cliente, ClientesAdmin)",
        "detail": "clientes.admin",
        "documentation": {}
    },
    {
        "label": "ClientesConfig",
        "kind": 6,
        "importPath": "clientes.apps",
        "description": "clientes.apps",
        "peekOfCode": "class ClientesConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'clientes'",
        "detail": "clientes.apps",
        "documentation": {}
    },
    {
        "label": "ClienteModelForm",
        "kind": 6,
        "importPath": "clientes.forms",
        "description": "clientes.forms",
        "peekOfCode": "class ClienteModelForm(forms.ModelForm):\n    class Meta:\n        model=Cliente\n        fields = '__all__'\n    def clean_cnpj_cpf(self):\n        cnpj_cpf = self.cleaned_data.get('cnpj_cpf')\n        tipo_pessoa = self.cleaned_data.get('tipo_pessoa')\n        if tipo_pessoa == 'pf':  # Valida como CPF\n            cpf_validator = CPF()\n            if not cpf_validator.validate(cnpj_cpf):",
        "detail": "clientes.forms",
        "documentation": {}
    },
    {
        "label": "Cliente",
        "kind": 6,
        "importPath": "clientes.models",
        "description": "clientes.models",
        "peekOfCode": "class Cliente(models.Model):\n    PESSOA =(\n        ('pf', \"Pessoa física\"),\n        ('pj', \"Pessoa jurídica\"),\n    )\n    nome_fantasia = models.CharField(max_length=80)\n    razao_social = models.CharField(max_length=80)\n    tipo_pessoa = models.CharField(max_length=20,choices=PESSOA, null=True, blank=True)\n    cnpj_cpf = models.CharField(max_length=14)\n    cep = models.CharField(max_length=9)",
        "detail": "clientes.models",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "clientes.urls",
        "description": "clientes.urls",
        "peekOfCode": "urlpatterns = [\n    path(\"\", ClientesListView.as_view(), name=\"clientes_list\"),\n    path(\"novo\", ClienteCreateView.as_view(), name=\"clientes_create\"),\n    path(\"<int:pk>\", ClientesUpdateView.as_view(), name=\"clientes_update\"),\n    path(\"delete/<int:pk>\", ClientesDeleteView.as_view(), name=\"clientes_delete\"),\n]",
        "detail": "clientes.urls",
        "documentation": {}
    },
    {
        "label": "ClientesListView",
        "kind": 6,
        "importPath": "clientes.views",
        "description": "clientes.views",
        "peekOfCode": "class ClientesListView(ListView):\n    model = Cliente\n    template_name = \"clientes.html\"\n    context_object_name = 'clientes'\n    def get_queryset(self):\n        clientes = super().get_queryset().order_by('nome_fantasia')\n        search = self.request.GET.get('search')\n        if search:\n            clientes = clientes.filter(model__icontains=search)\n        return clientes",
        "detail": "clientes.views",
        "documentation": {}
    },
    {
        "label": "ClienteCreateView",
        "kind": 6,
        "importPath": "clientes.views",
        "description": "clientes.views",
        "peekOfCode": "class ClienteCreateView(CreateView):\n    model = Cliente\n    template_name = \"clientes_create.html\"\n    form_class = ClienteModelForm\n    success_url = \"/clientes/\"\nclass ClientesUpdateView(UpdateView):\n    model = Cliente\n    template_name = \"clientes_update.html\"\n    form_class = ClienteModelForm\n    def get_success_url(self):",
        "detail": "clientes.views",
        "documentation": {}
    },
    {
        "label": "ClientesUpdateView",
        "kind": 6,
        "importPath": "clientes.views",
        "description": "clientes.views",
        "peekOfCode": "class ClientesUpdateView(UpdateView):\n    model = Cliente\n    template_name = \"clientes_update.html\"\n    form_class = ClienteModelForm\n    def get_success_url(self):\n        return reverse_lazy('clientes_update', kwargs={'pk': self.object.pk})\nclass ClientesDeleteView(DeleteView):\n    model = Cliente\n    template_name = \"clientes_delete.html\"\n    success_url = \"/clientes/\"",
        "detail": "clientes.views",
        "documentation": {}
    },
    {
        "label": "ClientesDeleteView",
        "kind": 6,
        "importPath": "clientes.views",
        "description": "clientes.views",
        "peekOfCode": "class ClientesDeleteView(DeleteView):\n    model = Cliente\n    template_name = \"clientes_delete.html\"\n    success_url = \"/clientes/\"",
        "detail": "clientes.views",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "core.asgi",
        "description": "core.asgi",
        "peekOfCode": "application = get_asgi_application()",
        "detail": "core.asgi",
        "documentation": {}
    },
    {
        "label": "BASE_DIR",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "BASE_DIR = Path(__file__).resolve().parent.parent\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = os.getenv('SECRET_KEY')\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "SECRET_KEY",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "SECRET_KEY = os.getenv('SECRET_KEY')\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "DEBUG",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "DEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "ALLOWED_HOSTS",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "ALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'clientes',",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "INSTALLED_APPS",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "INSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'clientes',\n    'movimentacoes',\n]",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "MIDDLEWARE",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "MIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\nROOT_URLCONF = 'core.urls'",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "ROOT_URLCONF",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "ROOT_URLCONF = 'core.urls'\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [os.path.join(BASE_DIR,\"core/templates\")],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "TEMPLATES",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "TEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [os.path.join(BASE_DIR,\"core/templates\")],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "WSGI_APPLICATION",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "WSGI_APPLICATION = 'core.wsgi.application'\n# Database\n# https://docs.djangoproject.com/en/5.1/ref/settings/#databases\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': BASE_DIR / 'db.sqlite3',\n    }\n}\n# Password validation",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "DATABASES",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "DATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': BASE_DIR / 'db.sqlite3',\n    }\n}\n# Password validation\n# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators\nAUTH_PASSWORD_VALIDATORS = [\n    {",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_PASSWORD_VALIDATORS",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "AUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "LANGUAGE_CODE",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "LANGUAGE_CODE = 'en-us'\nTIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.1/howto/static-files/\nSTATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "TIME_ZONE",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "TIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.1/howto/static-files/\nSTATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nMEDIA_ROOT = os.path.join(BASE_DIR,\"media\")",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "USE_I18N",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "USE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.1/howto/static-files/\nSTATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nMEDIA_ROOT = os.path.join(BASE_DIR,\"media\")\nMEDIA_URL = \"/media/\"",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "USE_TZ",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "USE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.1/howto/static-files/\nSTATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nMEDIA_ROOT = os.path.join(BASE_DIR,\"media\")\nMEDIA_URL = \"/media/\"",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_URL",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "STATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nMEDIA_ROOT = os.path.join(BASE_DIR,\"media\")\nMEDIA_URL = \"/media/\"",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "DEFAULT_AUTO_FIELD",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nMEDIA_ROOT = os.path.join(BASE_DIR,\"media\")\nMEDIA_URL = \"/media/\"",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "MEDIA_ROOT",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "MEDIA_ROOT = os.path.join(BASE_DIR,\"media\")\nMEDIA_URL = \"/media/\"",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "MEDIA_URL",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "MEDIA_URL = \"/media/\"",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "core.urls",
        "description": "core.urls",
        "peekOfCode": "urlpatterns = [\n    path('admin/', admin.site.urls),\n    path('clientes/',include(\"clientes.urls\"))\n]",
        "detail": "core.urls",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "core.wsgi",
        "description": "core.wsgi",
        "peekOfCode": "application = get_wsgi_application()",
        "detail": "core.wsgi",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "movimentacoes.migrations.0001_initial",
        "description": "movimentacoes.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        ('clientes', '0004_rename_clientes_cliente_rename_cnpj_cliente_cnpj_cpf'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Banco',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),",
        "detail": "movimentacoes.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "movimentacoes.migrations.0002_banco_saldo_atual",
        "description": "movimentacoes.migrations.0002_banco_saldo_atual",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('movimentacoes', '0001_initial'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='banco',\n            name='saldo_atual',\n            field=models.DecimalField(decimal_places=2, max_digits=12, null=True),\n        ),",
        "detail": "movimentacoes.migrations.0002_banco_saldo_atual",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "movimentacoes.migrations.0003_alter_banco_saldo_atual",
        "description": "movimentacoes.migrations.0003_alter_banco_saldo_atual",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('movimentacoes', '0002_banco_saldo_atual'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='banco',\n            name='saldo_atual',\n            field=models.DecimalField(auto_created=True, blank=True, decimal_places=2, default=0, max_digits=12, null=True),\n        ),",
        "detail": "movimentacoes.migrations.0003_alter_banco_saldo_atual",
        "documentation": {}
    },
    {
        "label": "BancoAdmin",
        "kind": 6,
        "importPath": "movimentacoes.admin",
        "description": "movimentacoes.admin",
        "peekOfCode": "class BancoAdmin(admin.ModelAdmin):\n    list_display = ('nome', 'saldo_atual', 'status')\n    search_fields = ('nome',)\n    list_filter = ('status',)\n@admin.register(Tipo)\nclass TipoAdmin(admin.ModelAdmin):\n    list_display = ('nome', 'tipo', 'status')\n    search_fields = ('nome',)\n    list_filter = ('tipo', 'status')\n@admin.register(Entrada)",
        "detail": "movimentacoes.admin",
        "documentation": {}
    },
    {
        "label": "TipoAdmin",
        "kind": 6,
        "importPath": "movimentacoes.admin",
        "description": "movimentacoes.admin",
        "peekOfCode": "class TipoAdmin(admin.ModelAdmin):\n    list_display = ('nome', 'tipo', 'status')\n    search_fields = ('nome',)\n    list_filter = ('tipo', 'status')\n@admin.register(Entrada)\nclass EntradaAdmin(admin.ModelAdmin):\n    list_display = ('cliente', 'descricao', 'valor', 'data', 'banco', 'tipo_pagamento', 'situacao')\n    search_fields = ('descricao', \"cliente\" )  \n    list_filter = ('data', 'banco', 'tipo_pagamento', 'situacao')\n@admin.register(Saida)",
        "detail": "movimentacoes.admin",
        "documentation": {}
    },
    {
        "label": "EntradaAdmin",
        "kind": 6,
        "importPath": "movimentacoes.admin",
        "description": "movimentacoes.admin",
        "peekOfCode": "class EntradaAdmin(admin.ModelAdmin):\n    list_display = ('cliente', 'descricao', 'valor', 'data', 'banco', 'tipo_pagamento', 'situacao')\n    search_fields = ('descricao', \"cliente\" )  \n    list_filter = ('data', 'banco', 'tipo_pagamento', 'situacao')\n@admin.register(Saida)\nclass SaidaAdmin(admin.ModelAdmin):\n    list_display = (\"tipo_despesa\", 'descricao', 'valor', 'data', 'banco', 'tipo_pagamento', 'situacao')\n    search_fields = ('descricao', \"tipo_despesa\")  \n    list_filter = ('data', 'banco', 'tipo_pagamento', 'situacao')",
        "detail": "movimentacoes.admin",
        "documentation": {}
    },
    {
        "label": "SaidaAdmin",
        "kind": 6,
        "importPath": "movimentacoes.admin",
        "description": "movimentacoes.admin",
        "peekOfCode": "class SaidaAdmin(admin.ModelAdmin):\n    list_display = (\"tipo_despesa\", 'descricao', 'valor', 'data', 'banco', 'tipo_pagamento', 'situacao')\n    search_fields = ('descricao', \"tipo_despesa\")  \n    list_filter = ('data', 'banco', 'tipo_pagamento', 'situacao')",
        "detail": "movimentacoes.admin",
        "documentation": {}
    },
    {
        "label": "MovimentacoesConfig",
        "kind": 6,
        "importPath": "movimentacoes.apps",
        "description": "movimentacoes.apps",
        "peekOfCode": "class MovimentacoesConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'movimentacoes'",
        "detail": "movimentacoes.apps",
        "documentation": {}
    },
    {
        "label": "Banco",
        "kind": 6,
        "importPath": "movimentacoes.models",
        "description": "movimentacoes.models",
        "peekOfCode": "class Banco(models.Model):\n    nome = models.CharField(max_length=50)\n    saldo_inicial = models.DecimalField(max_digits=12, decimal_places=2)\n    status = models.CharField(max_length=10, choices=STATUS, default=\"AT\")\n    saldo_atual = models.DecimalField(max_digits=12,decimal_places=2, null=True, blank=True,auto_created=True, default=0)\n    def __str__(self):\n        return self.nome\nclass Tipo(models.Model):\n    NOME_TIPO = (\n        (\"pagamento\", \"Tipo de Pagamento\"),",
        "detail": "movimentacoes.models",
        "documentation": {}
    },
    {
        "label": "Tipo",
        "kind": 6,
        "importPath": "movimentacoes.models",
        "description": "movimentacoes.models",
        "peekOfCode": "class Tipo(models.Model):\n    NOME_TIPO = (\n        (\"pagamento\", \"Tipo de Pagamento\"),\n        (\"despesa\", \"Tipo de Despesa\"),\n        (\"entrada\", \"Tipo de Entrada\"),\n    )\n    nome = models.CharField(max_length=100, unique=True)\n    tipo = models.CharField(max_length=10, choices=NOME_TIPO)\n    status = models.CharField(max_length=10, choices=STATUS)\n    def __str__(self):",
        "detail": "movimentacoes.models",
        "documentation": {}
    },
    {
        "label": "Entrada",
        "kind": 6,
        "importPath": "movimentacoes.models",
        "description": "movimentacoes.models",
        "peekOfCode": "class Entrada(models.Model):\n    cliente = models.ForeignKey(Cliente, null=True, blank=True, on_delete=models.PROTECT)\n    descricao = models.CharField(max_length=200, null=True, blank=True)\n    valor = models.DecimalField(max_digits=12, decimal_places=2)\n    data = models.DateField(auto_now_add=True)\n    banco = models.ForeignKey(Banco, on_delete=models.PROTECT)\n    tipo_pagamento = models.ForeignKey(Tipo, limit_choices_to={'tipo': 'pagamento'}, on_delete=models.PROTECT,related_name='pagamentos')\n    tipo_entrada = models.ForeignKey(Tipo, limit_choices_to={'tipo': 'entrada'}, on_delete=models.PROTECT, related_name='entradas')\n    situacao = models.CharField(max_length=2, choices=SITUACAO)\n    def __str__(self):",
        "detail": "movimentacoes.models",
        "documentation": {}
    },
    {
        "label": "Saida",
        "kind": 6,
        "importPath": "movimentacoes.models",
        "description": "movimentacoes.models",
        "peekOfCode": "class Saida(models.Model):\n    tipo_despesa = models.ForeignKey(Tipo, limit_choices_to={'tipo': 'despesa'}, on_delete=models.PROTECT,related_name='despesas_saida')\n    descricao = models.CharField(max_length=200, null=True, blank=True)\n    valor = models.DecimalField(max_digits=12, decimal_places=2)\n    data = models.DateField(auto_now_add=True)\n    banco = models.ForeignKey(Banco, on_delete=models.PROTECT)\n    tipo_pagamento = models.ForeignKey(Tipo, limit_choices_to={'tipo': 'pagamento'}, on_delete=models.PROTECT, related_name='saidas')\n    situacao = models.CharField(max_length=2, choices=SITUACAO)\n    def __str__(self):\n        return f'Saída: {self.valor} - {self.descricao}'",
        "detail": "movimentacoes.models",
        "documentation": {}
    },
    {
        "label": "STATUS",
        "kind": 5,
        "importPath": "movimentacoes.models",
        "description": "movimentacoes.models",
        "peekOfCode": "STATUS = (\n    (\"AT\", \"Ativo\"),\n    (\"IN\", \"Inativo\")\n)\nSITUACAO = (\n    (\"PG\", \"Pago\"),\n    (\"AP\", \"A pagar\")\n)\nclass Banco(models.Model):\n    nome = models.CharField(max_length=50)",
        "detail": "movimentacoes.models",
        "documentation": {}
    },
    {
        "label": "SITUACAO",
        "kind": 5,
        "importPath": "movimentacoes.models",
        "description": "movimentacoes.models",
        "peekOfCode": "SITUACAO = (\n    (\"PG\", \"Pago\"),\n    (\"AP\", \"A pagar\")\n)\nclass Banco(models.Model):\n    nome = models.CharField(max_length=50)\n    saldo_inicial = models.DecimalField(max_digits=12, decimal_places=2)\n    status = models.CharField(max_length=10, choices=STATUS, default=\"AT\")\n    saldo_atual = models.DecimalField(max_digits=12,decimal_places=2, null=True, blank=True,auto_created=True, default=0)\n    def __str__(self):",
        "detail": "movimentacoes.models",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "manage",
        "description": "manage",
        "peekOfCode": "def main():\n    \"\"\"Run administrative tasks.\"\"\"\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'core.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"\n            \"forget to activate a virtual environment?\"",
        "detail": "manage",
        "documentation": {}
    }
]